name: Go Build and Release

on:
  push:
    tags:
      - 'v*' # 触发条件：当推送以 "v" 开头的 tag 时执行

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 设置 Go 环境
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20 # 使用 Go 版本

      # 构建二进制文件
      - name: Build binaries
        run: |
          mkdir -p dist
          GOOS=linux GOARCH=amd64 go build -o dist/certum_validation_linux certum_validation.go
          GOOS=windows GOARCH=amd64 go build -o dist/certum_validation_windows.exe certum_validation.go
          GOOS=darwin GOARCH=amd64 go build -o dist/certum_validation_mac certum_validation.go

      # 发布构建到 GitHub Releases
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/certum_validation_linux
          asset_name: certum_validation_linux
          asset_content_type: application/octet-stream

      - name: Upload Release Assets (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/certum_validation_windows.exe
          asset_name: certum_validation_windows.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Assets (macOS)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/certum_validation_mac
          asset_name: certum_validation_mac
          asset_content_type: application/octet-stream
